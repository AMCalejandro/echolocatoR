% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validation.R
\name{VALIDATION.bootstrap_plot}
\alias{VALIDATION.bootstrap_plot}
\title{Plot permutation test results}
\usage{
VALIDATION.bootstrap_plot(
  boot_res,
  validation_method = NULL,
  facet_formula = ". ~ .",
  y_var = "z",
  override_metric_count = F,
  remove_random = T,
  show_plot = T,
  save_plot = F,
  box.padding = 0.5,
  font_size = 3,
  height = 5,
  width = 7,
  verbose = T
)
}
\description{
Plot permutation test results
}
\examples{
\dontrun{
root <- "/sc/arion/projects/pd-omics/brian/Fine_Mapping/Data/GWAS/Nalls23andMe_2019/_genome_wide"

#### h2 ####
validation_method <- "S-LDSC heritability"
## mean
path <- file.path(root,"PolyFun/Nalls23andMe_2019.h2_enrich.snp_groups.bootstrap.coin_wilcox_test.csv.gz")
## raw
path <-  file.path(root,"PolyFun/Nalls23andMe_2019.h2.bootstrap.coin_wilcox_test.csv.gz")

#### IMPACT ####
validation_method <- "IMPACT"
### mean
path <- file.path(root,"IMPACT/TOP_IMPACT_all.bootstrap.coin_wilcox_test.csv.gz")
### raw
path <- file.path(root,"IMPACT/Nalls23andMe_2019.IMPACT_score.permutations.csv.gz")

#### SURE MPRA ####
validation_method <- "SuRE MPRA"
## mean
path <- file.path(root,"SURE/Nalls23andMe_2019.SURE.snp_groups.mean.bootstrap.stats_wilcox.test.csv.gz")
### raw
path <- file.path(root,"SURE/Nalls23andMe_2019.SURE.bootstrap.stats_wilcox.test.csv.gz")


#### Dey_DeepLearning ####
validation_method <- "Dey_DeepLearning"
## mean
path <- file.path(root,"Dey_DeepLearning/Nalls23andMe_2019.Dey_DeepLearning.annot.Allelic_Effect.snp_groups_mean.bootstrap.coin_wilcox_test_subset.csv.gz")
## raw
path <- file.path(root,"Dey_DeepLearning/Nalls23andMe_2019.Dey_DeepLearning.annot.Allelic_Effect.bootstrap.stats_wilcox.test.csv.gz")
path <- file.path(root,"Dey_DeepLearning/Nalls23andMe_2019.Dey_DeepLearning.annot.Variant_Level.bootstrap.stats_wilcox.test.csv.gz")

# ------  Import
boot_res <-  data.table::fread(path, nThread=4)
if(validation_method=="SuRE MPRA") boot_res$z <- -boot_res$z

# ---Plot ---
library(patchwork)
if(validation_method=="Dey_DeepLearning") boot_res <- data.frame(boot_res)[grepl("H3K4ME3", boot_res$Metric, fixed=T) & grepl("Basenji", boot_res$Metric, fixed=T) & grepl("_MAX_", boot_res$Metric, fixed=T),]
facet_formula <- if(validation_method=="Dey_DeepLearning") "Assay  ~ Model" else ".~."
facet_formula <- if(validation_method=="SuRE MPRA") ".  ~ Cell_type" else ".~."
gp1 <- VALIDATION.bootstrap_plot(boot_res=boot_res, validation_method=validation_method, y_var="z", save_plot=gsub("\\\\.csv\\\\.gz",".stat_values.png",path), width=9, facet_formula=facet_formula, override_metric_count = T)
gp2 <- VALIDATION.bootstrap_plot(boot_res=subset(boot_res, stat>0), validation_method=validation_method, y_var="p", save_plot=gsub("\\\\.csv\\\\.gz",".p_values.png",path), width=9,facet_formula = facet_formula, override_metric_count = T)
gp12 <- (gp1 / gp2) + patchwork::plot_annotation(tag_levels = "a")
ggsave(gsub("\\\\.csv\\\\.gz",".png",path),gp12, dpi=400, height=9, width=15)

}
}
\seealso{
Other VALIDATION: 
\code{\link{VALIDATION.bootstrap_multimetric}()},
\code{\link{VALIDATION.bootstrap}()},
\code{\link{VALIDATION.compare_bootstrap_distributions}()},
\code{\link{VALIDATION.permute}()},
\code{\link{VALIDATION.super_plot}()}
}
\concept{VALIDATION}
